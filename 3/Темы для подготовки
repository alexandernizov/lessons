- Массивы. Слайсы. Отличия массивов от слайсов.

        go/src/go/types/array
        type Array struct {
	        len  int64
	        elem Type
        }

        go/src/runtime/slice.go
        type slice struct {
	        array unsafe.Pointer   <- указатель на массив
	        len   int
	        cap   int
        }

- Внутреннее устройство slice, работа со slice
    - Все особенности работы связаны с тем, что иногда слайс может указывать на массив, а иногда - нет. Это зависит от того, нужно ли
    было аллоцировать новую память под выделенный слайс или нет: если нет - то слайс всё ещё ссылается на исходный массив\слайс. Если
    мы добавили новый элемент и свободных ячеек в памяти рядом не было - то под капотом произойдет аллокация памяти под слайс, в него
    начиная с 0 элемента запишутся все данные, добавится память про запас.
    Из этого следует:
        - Если мы собираемся только считать что-то из слайса - то можно передавать без ссылочного значения fn (slice []int) {}
        - Если мы собираемся что-то записать в переданный слайс в функцию - то передавать по ссылке fn (*slice []int) {}
    - Capacity не всегда умножается на 2 - есть коэфициенты, которые могут измениться в новой версии go. Поэтому, если мы заранее
    знаем, какое кол-во элементов будет выделено - лучше задать capacity или использовать grow

- Выделение памяти, операции make / append / copy
    new - инициализация типа с zero value и возврат указателя
    make - инициализация нового слайса\мапы\канала - возврат значения
        n := new(chan int)
        m := make(chan int, 0)
        n = &m
    append - добавляет новое значение(или значения) в конец слайса, тем самым увеличивая его длину. Опять же про память. Если capacity было затрачено
    то выделится новая область памяти, поэтому безопасно использовать:
        s = append(s, smth)
    тем самым переопределив ссылку на переменную
    copy - копирует значения из одного слайса в другой. Опять же пока что проверять, что копирует, потому что копируются только те
    значения, которые влазят в слайс. Те которые не влезли - под них не выделяется память
- Пакет slices

